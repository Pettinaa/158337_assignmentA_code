-- Dropping existing tables to avoid conflicts


DROP TABLE Advisor CASCADE CONSTRAINTS;
-- Creating the Advisor table
CREATE TABLE Advisor (
    ADVISOR_ID INT PRIMARY KEY,
    ADVISOR_FNAME VARCHAR(50) NOT NULL,
    ADVISOR_LNAME VARCHAR(50) NOT NULL,
    ADVISOR_BIRTHDAY DATE,
    ADVISOR_POSITION VARCHAR(100),
    ADVISOR_DEPARTMENT VARCHAR(50),
    ADVISOR_ROOM_NUM VARCHAR(10)
);

DROP TABLE AdvisorTel CASCADE CONSTRAINTS;
-- Creating the AdvisorTel table
CREATE TABLE AdvisorTel (
    ADVISOR_ID INT PRIMARY KEY,
    ADVISOR_TEL_NUM VARCHAR(20) NOT NULL,
    FOREIGN KEY(ADVISOR_ID) REFERENCES Advisor(ADVISOR_ID) ON DELETE CASCADE
);

DROP TABLE Accommodation CASCADE CONSTRAINTS;
-- Creating the Accommodation table
CREATE TABLE Accommodation (
    ALL_ACC_ID INT PRIMARY KEY,
    ACC_TYPE VARCHAR(50),
    ACC_NAME VARCHAR(100) NOT NULL,
    ACC_ADDRESS VARCHAR(250),
    ACC_TOTAL_ROOM INT,
    ACC_AVA_ROOM INT,
    ACC_MONTHLY_RENT NUMBER(10, 2) NOT NULL
);


DROP TABLE Course CASCADE CONSTRAINTS;
-- Creating the Course table
CREATE TABLE Course (
    COR_ID INT PRIMARY KEY,
    COR_DEGREE_TITLE VARCHAR(100) NOT NULL,
    COR_DIRECTOR_NAME VARCHAR(100),
    COR_INT_TEL_NUM VARCHAR(20),
    COR_ROOM_NUM VARCHAR(10),
    COR_DEPT_NAME VARCHAR(50)
);

DROP TABLE Student CASCADE CONSTRAINTS;
-- Creating the Student table
CREATE TABLE Student (
    STU_ID INT PRIMARY KEY,
    STU_FNAME VARCHAR(50) NOT NULL,
    STU_LNAME VARCHAR(50) NOT NULL,
    STU_BIRTHDAY DATE,
    STU_ADDRESS VARCHAR(100),
    STU_AGE INT NOT NULL,
    STU_GENDER VARCHAR(10),
    STU_CATEGORY VARCHAR(20),
    STU_NATIONALITY VARCHAR(50),
    STU_SMOKER VARCHAR(10),
    STU_NEED VARCHAR(250),
    STU_STATUS VARCHAR2(20),
    COR_ID INT,
    ADVISOR_ID INT,
    FOREIGN KEY(COR_ID) REFERENCES Course(COR_ID),
    FOREIGN KEY(ADVISOR_ID) REFERENCES Advisor
);

DROP TABLE Manager CASCADE CONSTRAINTS;
-- Creating the Manager table
CREATE TABLE Manager (
    ALL_ACC_ID INT PRIMARY KEY,
    HALL_MAGER_FNAME VARCHAR(50) NOT NULL,
    HALL_MAGER_LNAME VARCHAR(50) NOT NULL,
    FOREIGN KEY(ALL_ACC_ID) REFERENCES Accommodation(ALL_ACC_ID) ON DELETE CASCADE
);

DROP TABLE Staff CASCADE CONSTRAINTS;
-- Creating the Staff table
CREATE TABLE Staff (
    STAFF_ID INT PRIMARY KEY,
    STAFF_FNAME VARCHAR(50) NOT NULL,
    STAFF_LNAME VARCHAR(50) NOT NULL,
    STAFF_GENDER VARCHAR(10),
    STAFF_POSITION VARCHAR(100),
    STAFF_LOCATION VARCHAR(100)
);

DROP TABLE Address CASCADE CONSTRAINTS;
-- Creating the Address table
CREATE TABLE Address (
    ADDRESS_ID INT PRIMARY KEY,
    ADD_STREET VARCHAR(250),
    ADD_DISTRICT VARCHAR(250),
    ADD_CITY VARCHAR(100),
    ADD_POSTCODE VARCHAR(20),
    STAFF_ID INT,
    FOREIGN KEY (STAFF_ID) REFERENCES Staff(STAFF_ID) ON DELETE CASCADE
);





DROP TABLE Agreement CASCADE CONSTRAINTS;
-- Creating the Agreement table
CREATE TABLE Agreement (
    AGT_ID INT PRIMARY KEY,
    STU_ID INT,
    ALL_ACC_ID INT,
    AGT_DURATION VARCHAR(20),
    AGT_STU_DETAIL VARCHAR(250),
    AGT_PL_NUM INT,
    AGT_ROOM_NUM INT,
    AGT_ADDRESS VARCHAR(100),
    AGT_CHECKIN_DATE DATE,
    AGT_CHECKOUT_DATE DATE,
    FOREIGN KEY(STU_ID) REFERENCES Student(STU_ID) ON DELETE CASCADE,
    FOREIGN KEY(ALL_ACC_ID) REFERENCES Accommodation(ALL_ACC_ID) ON DELETE CASCADE
);



DROP TABLE Hall CASCADE CONSTRAINTS;
-- Creating the Hall table
CREATE TABLE Hall (
    HALL_PL_NUM INT,
    ALL_ACC_ID INT,
    HALL_ROOM_NUM INT,
    HALL_TELE_NUM VARCHAR(20),
    HALL_STU_DIETARY_OPT VARCHAR(100),
    PRIMARY KEY(HALL_PL_NUM,ALL_ACC_ID),
    FOREIGN KEY(ALL_ACC_ID) REFERENCES Accommodation ON DELETE CASCADE
);


DROP TABLE Flat CASCADE CONSTRAINTS;
-- Creating the Flat table
CREATE TABLE Flat (
    FLAT_PL_NUM INT,
    ALL_ACC_ID INT,
    FLAT_ROOM_NUM INT,
    PRIMARY KEY(FLAT_PL_NUM,ALL_ACC_ID),
    FOREIGN KEY(ALL_ACC_ID) REFERENCES Accommodation ON DELETE CASCADE
);

DROP TABLE Unit CASCADE CONSTRAINTS;
-- Creating the Unit table
CREATE TABLE Unit (
    UNIT_NUM INT,
    ALL_ACC_ID INT,
    UNIT_MEM_NUM INT,
    UNIT_FURNISHED_TYPE VARCHAR(50),
    PRIMARY KEY(UNIT_NUM,ALL_ACC_ID),
    FOREIGN KEY(ALL_ACC_ID) REFERENCES Accommodation ON DELETE CASCADE
);

DROP TABLE UnitMember CASCADE CONSTRAINTS;
-- Creating the UnitMember table


CREATE TABLE UnitMember (
    MEM_ID INT PRIMARY KEY,
    UNIT_NUM INT,
    ALL_ACC_ID INT,
    MEM_FNAME VARCHAR(50) NOT NULL,
    MEM_LNAME VARCHAR(50) NOT NULL,
    MEM_AGE INT,
    MEM_RELATION VARCHAR(50),
    FOREIGN KEY (UNIT_NUM, ALL_ACC_ID) REFERENCES Unit (UNIT_NUM, ALL_ACC_ID)
);



DROP TABLE Invoice CASCADE CONSTRAINTS;
-- Creating the Invoice table
CREATE TABLE Invoice (
    INV_ID INT PRIMARY KEY,
    STU_ID INT,
    AGT_ID INT,
    INV_LEASE_NUM VARCHAR(15),
    INV_SEMSTER VARCHAR(50),
    INV_PAYMENT_DUE DATE,
    INV_PL_NUM INT,
    INV_ROOM_NUM INT,
    INV_ADDRESS VARCHAR(100),
    INV_PAYMENT_DATE VARCHAR(100),
    INV_PAYMENT_METHOD VARCHAR(20),
    INV_PAYMENT_REM_DATE DATE,
    FOREIGN KEY(STU_ID) REFERENCES Student(STU_ID) ON DELETE CASCADE,
    FOREIGN KEY(AGT_ID) REFERENCES Agreement(AGT_ID) ON DELETE CASCADE
);



DROP TABLE PaymentList CASCADE CONSTRAINTS;
-- Creating the PaymentList table
CREATE TABLE PaymentList (
    STU_ID INT PRIMARY KEY,
    INV_PAY_OR_NOT VARCHAR(5)
);



DROP TABLE Next_Of_Kin CASCADE CONSTRAINTS;
-- Creating the Next_Of_Kin table
CREATE TABLE Next_Of_Kin (
    NOK_ID INT PRIMARY KEY,
    NOK_FNAME VARCHAR(50) NOT NULL,
    NOK_LNAME VARCHAR(50) NOT NULL,
    NOK_RELATIONSHIP VARCHAR(50),
    STU_ID INT,
    FOREIGN KEY(STU_ID) REFERENCES Student(STU_ID) ON DELETE CASCADE
);


DROP TABLE NOK_Tel CASCADE CONSTRAINTS;
-- Creating the NOK_Tel table
CREATE TABLE NOK_Tel (
    NOK_ID INT PRIMARY KEY,
    NOK_TEL_NUM VARCHAR(20),
    FOREIGN KEY(NOK_ID) REFERENCES Next_Of_Kin ON DELETE CASCADE
);


DROP TABLE Inspection CASCADE CONSTRAINTS;
-- Creating the Inspection table
CREATE TABLE Inspection (
    ACC_CHECK_ID INT PRIMARY KEY,
    STAFF_ID INT,
    ACC_CHECK_DATE DATE,
    ACC_ADDRESS VARCHAR(100),
    ACC_INDICATION VARCHAR(20),
    ACC_ADD_COMMENT VARCHAR(250),
    FLAT_PL_NUM INT,
    ALL_ACC_ID INT,
    UNIT_NUM INT,
    FOREIGN KEY(STAFF_ID) REFERENCES Staff ON DELETE CASCADE,
    FOREIGN KEY(FLAT_PL_NUM, ALL_ACC_ID) REFERENCES Flat (FLAT_PL_NUM, ALL_ACC_ID) ON DELETE CASCADE,
    FOREIGN KEY(ALL_ACC_ID) REFERENCES Accommodation (ALL_ACC_ID) ON DELETE CASCADE,
    FOREIGN KEY(UNIT_NUM, ALL_ACC_ID) REFERENCES Unit (UNIT_NUM, ALL_ACC_ID) ON DELETE CASCADE
);

--end of script

COMMIT;